[
  {
    "objectID": "02_virginia_election_project_youranalysis.html",
    "href": "02_virginia_election_project_youranalysis.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "First we’ll begin by cleaning up and joining two data sets containing info on the 2020 national election results, as well as the VA governor race.\nData available here: https://historical.elections.virginia.gov/elections/view/144567/\n\nprez_2020 <- read_csv(\"processed_data/va_2020_prez_cleaned.csv\")\n\nRows: 134 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): locality\nnum (3): biden, trump, total_votes_2021_prez\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nTaking a first look at the data\n\nhead(prez_2020) \n\n# A tibble: 6 × 4\n  locality         biden trump total_votes_2021_prez\n  <chr>            <dbl> <dbl>                 <dbl>\n1 Accomack County   7578  9172                 16962\n2 Albemarle County 42466 20804                 64657\n3 Alexandria City  66240 14544                 82508\n4 Alleghany County  2243  5859                  8203\n5 Amelia County     2411  5390                  7893\n6 Amherst County    5672 11041                 17005\n\n\nCalculating percentage of the vote\n\nprez_2020 %>% \n  mutate(\n    biden_pct = biden/total_votes_2021_prez\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962     0.447\n 2 Albemarle County   42466 20804                 64657     0.657\n 3 Alexandria City    66240 14544                 82508     0.803\n 4 Alleghany County    2243  5859                  8203     0.273\n 5 Amelia County       2411  5390                  7893     0.305\n 6 Amherst County      5672 11041                 17005     0.334\n 7 Appomattox County   2418  6702                  9268     0.261\n 8 Arlington County  105344 22318                130699     0.806\n 9 Augusta County     10840 30714                 42278     0.256\n10 Bath County          646  1834                  2501     0.258\n# … with 124 more rows\n\n\nNow let’s do some rounding and move that decimal point\n\nprez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 1)\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962      44.7\n 2 Albemarle County   42466 20804                 64657      65.7\n 3 Alexandria City    66240 14544                 82508      80.3\n 4 Alleghany County    2243  5859                  8203      27.3\n 5 Amelia County       2411  5390                  7893      30.5\n 6 Amherst County      5672 11041                 17005      33.4\n 7 Appomattox County   2418  6702                  9268      26.1\n 8 Arlington County  105344 22318                130699      80.6\n 9 Augusta County     10840 30714                 42278      25.6\n10 Bath County          646  1834                  2501      25.8\n# … with 124 more rows\n\n\nCalculating the percentage of the total votes Biden and Trump respectively recieved\n\nprez_2020 <- prez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 2),\n    trump_pct = janitor::round_half_up(trump / total_votes_2021_prez * 100, 2)\n  )\n\nhead(prez_2020)\n\n# A tibble: 6 × 6\n  locality         biden trump total_votes_2021_prez biden_pct trump_pct\n  <chr>            <dbl> <dbl>                 <dbl>     <dbl>     <dbl>\n1 Accomack County   7578  9172                 16962      44.7      54.1\n2 Albemarle County 42466 20804                 64657      65.7      32.2\n3 Alexandria City  66240 14544                 82508      80.3      17.6\n4 Alleghany County  2243  5859                  8203      27.3      71.4\n5 Amelia County     2411  5390                  7893      30.6      68.3\n6 Amherst County    5672 11041                 17005      33.4      64.9\n\n\nData now available from the state here: https://historical.elections.virginia.gov/elections/view/147466.\n\njsonfile <- \"raw_data/va_gov_json_archived.json\"\n\n#using jsonlite package function fromJSON()\nthis.content <- fromJSON(jsonfile)\n\n#dataframe from just the 6 content \ncontent_df <- as.data.frame(this.content[[6]])\n\nWhere are candidates themselves? They are “nested” inside. We’ll use unnest()to expand things.\n\n#unnest\nresults <- content_df %>%\n  unnest(cols = Candidates)\n\nhead(results)\n\n# A tibble: 6 × 9\n  Locali…¹ $Loca…² Preci…³ Preci…⁴ LastM…⁵ Ballo…⁶ Ballo…⁷ Votes Perce…⁸ Polit…⁹\n  <chr>    <chr>     <int>   <int> <chr>   <chr>     <int> <int> <chr>   <chr>  \n1 ACCOMAC… 001          19      19 2021-1… Glenn …  1   e0  7878 61.08%  Republ…\n2 ACCOMAC… 001          19      19 2021-1… Terry …  2   e0  4948 38.37%  Democr…\n3 ACCOMAC… 001          19      19 2021-1… Prince…  3   e0    67 0.52%   Libera…\n4 ACCOMAC… 001          19      19 2021-1… Write …  2.15e9     4 0.03%   Write-…\n5 ALBEMAR… 003          33      33 2021-1… Glenn …  1   e0 19141 37.21%  Republ…\n6 ALBEMAR… 003          33      33 2021-1… Terry …  2   e0 31919 62.05%  Democr…\n# … with abbreviated variable names ¹​Locality$LocalityName, ²​$LocalityCode,\n#   ³​PrecinctsReporting, ⁴​PrecinctsParticipating, ⁵​LastModified, ⁶​BallotName,\n#   ⁷​BallotOrder, ⁸​Percentage, ⁹​PoliticalParty\n\n\nUnnest again on locality\n\nresults <- results %>%\n  unnest(cols = Locality)\n\nhead(results)\n\n# A tibble: 6 × 10\n  Locali…¹ Local…² Preci…³ Preci…⁴ LastM…⁵ Ballo…⁶ Ballo…⁷ Votes Perce…⁸ Polit…⁹\n  <chr>    <chr>     <int>   <int> <chr>   <chr>     <int> <int> <chr>   <chr>  \n1 ACCOMAC… 001          19      19 2021-1… Glenn …  1   e0  7878 61.08%  Republ…\n2 ACCOMAC… 001          19      19 2021-1… Terry …  2   e0  4948 38.37%  Democr…\n3 ACCOMAC… 001          19      19 2021-1… Prince…  3   e0    67 0.52%   Libera…\n4 ACCOMAC… 001          19      19 2021-1… Write …  2.15e9     4 0.03%   Write-…\n5 ALBEMAR… 003          33      33 2021-1… Glenn …  1   e0 19141 37.21%  Republ…\n6 ALBEMAR… 003          33      33 2021-1… Terry …  2   e0 31919 62.05%  Democr…\n# … with abbreviated variable names ¹​LocalityName, ²​LocalityCode,\n#   ³​PrecinctsReporting, ⁴​PrecinctsParticipating, ⁵​LastModified, ⁶​BallotName,\n#   ⁷​BallotOrder, ⁸​Percentage, ⁹​PoliticalParty\n\n\nCleaning up the columns\n\ngov_2021 <- results %>% \n  clean_names() %>% \n  select(-precincts_reporting,\n         -precincts_participating,\n         -last_modified,\n         -ballot_order)\n\nhead(gov_2021)\n\n# A tibble: 6 × 6\n  locality_name    locality_code ballot_name          votes percentage politic…¹\n  <chr>            <chr>         <chr>                <int> <chr>      <chr>    \n1 ACCOMACK COUNTY  001           Glenn A. Youngkin     7878 61.08%     Republic…\n2 ACCOMACK COUNTY  001           Terry R. McAuliffe    4948 38.37%     Democrat…\n3 ACCOMACK COUNTY  001           Princess L. Blanding    67 0.52%      Liberati…\n4 ACCOMACK COUNTY  001           Write In                 4 0.03%      Write-In \n5 ALBEMARLE COUNTY 003           Glenn A. Youngkin    19141 37.21%     Republic…\n6 ALBEMARLE COUNTY 003           Terry R. McAuliffe   31919 62.05%     Democrat…\n# … with abbreviated variable name ¹​political_party\n\n\nReshaping the data so that it’s easier to use\n\ngov_2021 <- gov_2021 %>% \n  filter(ballot_name %in% c(\"Glenn A. Youngkin\", \"Terry R. McAuliffe\")) %>% \n  select(-locality_code,\n         -political_party)\n  \ngov_2021\n\n# A tibble: 266 × 4\n   locality_name    ballot_name        votes percentage\n   <chr>            <chr>              <int> <chr>     \n 1 ACCOMACK COUNTY  Glenn A. Youngkin   7878 61.08%    \n 2 ACCOMACK COUNTY  Terry R. McAuliffe  4948 38.37%    \n 3 ALBEMARLE COUNTY Glenn A. Youngkin  19141 37.21%    \n 4 ALBEMARLE COUNTY Terry R. McAuliffe 31919 62.05%    \n 5 ALEXANDRIA CITY  Glenn A. Youngkin  14013 24.02%    \n 6 ALEXANDRIA CITY  Terry R. McAuliffe 43866 75.20%    \n 7 ALLEGHANY COUNTY Glenn A. Youngkin   4530 74.52%    \n 8 ALLEGHANY COUNTY Terry R. McAuliffe  1518 24.97%    \n 9 AMELIA COUNTY    Glenn A. Youngkin   4720 74.19%    \n10 AMELIA COUNTY    Terry R. McAuliffe  1617 25.42%    \n# … with 256 more rows\n\n\n\ngov_2021_wide <- gov_2021 %>% \n  pivot_wider(names_from = ballot_name, values_from = c(votes, percentage))\n\ngov_2021_wide\n\n# A tibble: 133 × 5\n   locality_name     `votes_Glenn A. Youngkin` votes_Terry R. …¹ perce…² perce…³\n   <chr>                                 <int>             <int> <chr>   <chr>  \n 1 ACCOMACK COUNTY                        7878              4948 61.08%  38.37% \n 2 ALBEMARLE COUNTY                      19141             31919 37.21%  62.05% \n 3 ALEXANDRIA CITY                       14013             43866 24.02%  75.20% \n 4 ALLEGHANY COUNTY                       4530              1518 74.52%  24.97% \n 5 AMELIA COUNTY                          4720              1617 74.19%  25.42% \n 6 AMHERST COUNTY                         9731              3897 71.00%  28.43% \n 7 APPOMATTOX COUNTY                      5971              1438 80.26%  19.33% \n 8 ARLINGTON COUNTY                      21548             73013 22.63%  76.67% \n 9 AUGUSTA COUNTY                        26196              7231 77.93%  21.51% \n10 BATH COUNTY                            1539               396 79.04%  20.34% \n# … with 123 more rows, and abbreviated variable names\n#   ¹​`votes_Terry R. McAuliffe`, ²​`percentage_Glenn A. Youngkin`,\n#   ³​`percentage_Terry R. McAuliffe`\n\n\n\ngov_2021_wide <- gov_2021_wide %>% \n  clean_names()\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    votes_glenn_a_youngkin votes_terry_r_mc_aul…¹ perce…² perce…³\n  <chr>                             <int>                  <int> <chr>   <chr>  \n1 ACCOMACK COUNTY                    7878                   4948 61.08%  38.37% \n2 ALBEMARLE COUNTY                  19141                  31919 37.21%  62.05% \n3 ALEXANDRIA CITY                   14013                  43866 24.02%  75.20% \n4 ALLEGHANY COUNTY                   4530                   1518 74.52%  24.97% \n5 AMELIA COUNTY                      4720                   1617 74.19%  25.42% \n6 AMHERST COUNTY                     9731                   3897 71.00%  28.43% \n# … with abbreviated variable names ¹​votes_terry_r_mc_auliffe,\n#   ²​percentage_glenn_a_youngkin, ³​percentage_terry_r_mc_auliffe\n\n\n\ngov_2021_wide <- gov_2021_wide %>% \n  rename(\n    youngkin = votes_glenn_a_youngkin,\n    mcauliffe = votes_terry_r_mc_auliffe,\n    pct_youngkin = percentage_glenn_a_youngkin,\n    pct_mcauliffe = percentage_terry_r_mc_auliffe\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int> <chr>        <chr>        \n1 ACCOMACK COUNTY      7878      4948 61.08%       38.37%       \n2 ALBEMARLE COUNTY    19141     31919 37.21%       62.05%       \n3 ALEXANDRIA CITY     14013     43866 24.02%       75.20%       \n4 ALLEGHANY COUNTY     4530      1518 74.52%       24.97%       \n5 AMELIA COUNTY        4720      1617 74.19%       25.42%       \n6 AMHERST COUNTY       9731      3897 71.00%       28.43%       \n\n\n\ngov_2021_wide <- gov_2021_wide %>% \n  mutate(\n    pct_youngkin = readr::parse_number(pct_youngkin),\n    pct_mcauliffe = readr::parse_number(pct_mcauliffe)\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int>        <dbl>         <dbl>\n1 ACCOMACK COUNTY      7878      4948         61.1          38.4\n2 ALBEMARLE COUNTY    19141     31919         37.2          62.0\n3 ALEXANDRIA CITY     14013     43866         24.0          75.2\n4 ALLEGHANY COUNTY     4530      1518         74.5          25.0\n5 AMELIA COUNTY        4720      1617         74.2          25.4\n6 AMHERST COUNTY       9731      3897         71            28.4\n\n\nPerfect. Problem solved.\n\n\n\ngov_2021_wide\n\n# A tibble: 133 × 5\n   locality_name     youngkin mcauliffe pct_youngkin pct_mcauliffe\n   <chr>                <int>     <int>        <dbl>         <dbl>\n 1 ACCOMACK COUNTY       7878      4948         61.1          38.4\n 2 ALBEMARLE COUNTY     19141     31919         37.2          62.0\n 3 ALEXANDRIA CITY      14013     43866         24.0          75.2\n 4 ALLEGHANY COUNTY      4530      1518         74.5          25.0\n 5 AMELIA COUNTY         4720      1617         74.2          25.4\n 6 AMHERST COUNTY        9731      3897         71            28.4\n 7 APPOMATTOX COUNTY     5971      1438         80.3          19.3\n 8 ARLINGTON COUNTY     21548     73013         22.6          76.7\n 9 AUGUSTA COUNTY       26196      7231         77.9          21.5\n10 BATH COUNTY           1539       396         79.0          20.3\n# … with 123 more rows\n\n\n\nprez_2020\n\n# A tibble: 134 × 6\n   locality           biden trump total_votes_2021_prez biden_pct trump_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962      44.7      54.1\n 2 Albemarle County   42466 20804                 64657      65.7      32.2\n 3 Alexandria City    66240 14544                 82508      80.3      17.6\n 4 Alleghany County    2243  5859                  8203      27.3      71.4\n 5 Amelia County       2411  5390                  7893      30.6      68.3\n 6 Amherst County      5672 11041                 17005      33.4      64.9\n 7 Appomattox County   2418  6702                  9268      26.1      72.3\n 8 Arlington County  105344 22318                130699      80.6      17.1\n 9 Augusta County     10840 30714                 42278      25.6      72.6\n10 Bath County          646  1834                  2501      25.8      73.3\n# … with 124 more rows\n\n\nCleaning up the data sets to get them ready for the join\n\nprez_2020 <- prez_2020 %>% \n  mutate(\n    locality = str_to_upper(locality)\n  ) %>% \n  select(-total_votes_2021_prez)\n\nprez_2020\n\n# A tibble: 134 × 5\n   locality           biden trump biden_pct trump_pct\n   <chr>              <dbl> <dbl>     <dbl>     <dbl>\n 1 ACCOMACK COUNTY     7578  9172      44.7      54.1\n 2 ALBEMARLE COUNTY   42466 20804      65.7      32.2\n 3 ALEXANDRIA CITY    66240 14544      80.3      17.6\n 4 ALLEGHANY COUNTY    2243  5859      27.3      71.4\n 5 AMELIA COUNTY       2411  5390      30.6      68.3\n 6 AMHERST COUNTY      5672 11041      33.4      64.9\n 7 APPOMATTOX COUNTY   2418  6702      26.1      72.3\n 8 ARLINGTON COUNTY  105344 22318      80.6      17.1\n 9 AUGUSTA COUNTY     10840 30714      25.6      72.6\n10 BATH COUNTY          646  1834      25.8      73.3\n# … with 124 more rows\n\n\n\nanti_join(prez_2020, gov_2021_wide, by = c(\"locality\" = \"locality_name\"))\n\n# A tibble: 2 × 5\n  locality                biden   trump biden_pct trump_pct\n  <chr>                   <dbl>   <dbl>     <dbl>     <dbl>\n1 KING AND QUEEN COUNTY    1590    2450      38.6      59.5\n2 TOTALS                2413568 1962430      54.1      44  \n\n\n\nanti_join(gov_2021_wide, prez_2020, by = c(\"locality_name\" = \"locality\"))\n\n# A tibble: 1 × 5\n  locality_name       youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>                  <int>     <int>        <dbl>         <dbl>\n1 KING & QUEEN COUNTY     2112      1130         64.8          34.6\n\n\n\nprez_2020 <- prez_2020 %>% \n  filter(locality != \"TOTALS\") %>% \n  mutate(\n    locality = str_replace(locality, \"KING AND QUEEN\", \"KING & QUEEN\")\n  )\n\nNow joining\n\njoined_vacomparison <- inner_join(prez_2020, gov_2021_wide, by = c(\"locality\" = \"locality_name\"))\n\nhead(joined_vacomparison)\n\n# A tibble: 6 × 9\n  locality         biden trump biden_pct trump…¹ young…² mcaul…³ pct_y…⁴ pct_m…⁵\n  <chr>            <dbl> <dbl>     <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>\n1 ACCOMACK COUNTY   7578  9172      44.7    54.1    7878    4948    61.1    38.4\n2 ALBEMARLE COUNTY 42466 20804      65.7    32.2   19141   31919    37.2    62.0\n3 ALEXANDRIA CITY  66240 14544      80.3    17.6   14013   43866    24.0    75.2\n4 ALLEGHANY COUNTY  2243  5859      27.3    71.4    4530    1518    74.5    25.0\n5 AMELIA COUNTY     2411  5390      30.6    68.3    4720    1617    74.2    25.4\n6 AMHERST COUNTY    5672 11041      33.4    64.9    9731    3897    71      28.4\n# … with abbreviated variable names ¹​trump_pct, ²​youngkin, ³​mcauliffe,\n#   ⁴​pct_youngkin, ⁵​pct_mcauliffe\n\n#save results to file for next step\nsaveRDS(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.rds\"))\nwrite_csv(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.csv\"))\n\n\n\n\n\njoined_vacomparison %>% \n  mutate(\n    mc_overperform = pct_mcauliffe - biden_pct,\n    mc_overperform_5 <- if_else(mc_overperform < -5, \"Yes\", \"No\")\n  )\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4   -6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0   -3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2   -5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0   -2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4   -5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4   -4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3   -6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7   -3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5   -4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3   -5.49\n# … with 123 more rows, 1 more variable: `mc_overperform_5 <- ...` <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform\n\n\n\nsaveRDS(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.rds\"))\nwrite_csv(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.csv\"))\n\n\nhead(joined_vacomparison)\n\n# A tibble: 6 × 9\n  locality         biden trump biden_pct trump…¹ young…² mcaul…³ pct_y…⁴ pct_m…⁵\n  <chr>            <dbl> <dbl>     <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>\n1 ACCOMACK COUNTY   7578  9172      44.7    54.1    7878    4948    61.1    38.4\n2 ALBEMARLE COUNTY 42466 20804      65.7    32.2   19141   31919    37.2    62.0\n3 ALEXANDRIA CITY  66240 14544      80.3    17.6   14013   43866    24.0    75.2\n4 ALLEGHANY COUNTY  2243  5859      27.3    71.4    4530    1518    74.5    25.0\n5 AMELIA COUNTY     2411  5390      30.6    68.3    4720    1617    74.2    25.4\n6 AMHERST COUNTY    5672 11041      33.4    64.9    9731    3897    71      28.4\n# … with abbreviated variable names ¹​trump_pct, ²​youngkin, ³​mcauliffe,\n#   ⁴​pct_youngkin, ⁵​pct_mcauliffe\n\n\nFirst, need to join the data set with a shapefile in order to produce a map\n\nva_count_geo <- tigris::counties(state = \"VA\", resolution = \"20m\", cb = TRUE)\n\nRetrieving data for the year 2021\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |============================                                          |  41%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |======================================================================| 100%\n\nva_count_geo$NAMELSAD <- toupper(va_count_geo$NAMELSAD)\n\nva_elect_sf <- va_count_geo %>% \n  left_join(. , joined_vacomparison, by=c(\"NAMELSAD\"=\"locality\"))\n\nNext, I’ll customize the labels and pop-ups for the maps so they look cleaner\n\nmylabel1 <- glue::glue(\"{va_elect_sf$NAMELSAD} {va_elect_sf$biden_pct}\")\n\nmylabel2 <- glue::glue(\"{va_elect_sf$NAMELSAD} {va_elect_sf$pct_mcauliffe}\")\n\nmylabel3 <- glue::glue(\"{va_elect_sf$NAMELSAD} {va_elect_sf$trump_pct}\")\n\nmylabel4 <- glue::glue(\"{va_elect_sf$NAMELSAD} {va_elect_sf$pct_youngkin}\")\n\n\nmypopup1 <- glue::glue(\"<strong>{va_elect_sf$NAMELSAD}</strong><br />\n                      Biden Pct: {va_elect_sf$biden_pct}<br />\") %>% \n  lapply(htmltools::HTML)\n\nmypopup2 <- glue::glue(\"<strong>{va_elect_sf$NAMELSAD}</strong><br />\n                      McAuliffe Pct: {va_elect_sf$pct_mcauliffe}<br />\") %>% \n  lapply(htmltools::HTML)\n\nmypopup3 <- glue::glue(\"<strong>{va_elect_sf$NAMELSAD}</strong><br />\n                      Trump Pct: {va_elect_sf$trump_pct}<br />\") %>% \n  lapply(htmltools::HTML)\n\nmypopup4 <- glue::glue(\"<strong>{va_elect_sf$NAMELSAD}</strong><br />\n                      Youngkin Pct: {va_elect_sf$pct_youngkin}<br />\") %>% \n  lapply(htmltools::HTML)\n\nNow I’ll create each map and clean them up to get them ready for comparison\n\nbiden_map = mapview(va_elect_sf, zcol = \"biden_pct\",\n                    col.regions = RColorBrewer::brewer.pal(9, \"Blues\"), \n                    alpha.regions = 1,\n                    legend = FALSE,\n                    popup = mypopup1,\n                    label = mylabel1)\n\nWarning: Found less unique colors (9) than unique zcol values (129)! \nInterpolating color vector to match number of zcol values.\n\n\n\nmcauliffe_map = mapview(va_elect_sf, zcol = \"pct_mcauliffe\",\n                        col.regions = RColorBrewer::brewer.pal(9, \"Blues\"), \n                        alpha.regions = 1,\n                        legend = FALSE,\n                        popup = mypopup2,\n                        label = mylabel2)\n\nWarning: Found less unique colors (9) than unique zcol values (132)! \nInterpolating color vector to match number of zcol values.\n\n\n\ntrump_map = mapview(va_elect_sf, zcol = \"trump_pct\",\n                    col.regions = RColorBrewer::brewer.pal(9, \"Reds\"), \n                    alpha.regions = 1,\n                    legend = FALSE,\n                    popup = mypopup3, \n                    label = mylabel3)\n\nWarning: Found less unique colors (9) than unique zcol values (129)! \nInterpolating color vector to match number of zcol values.\n\n\n\nyoungkin_map = mapview(va_elect_sf, zcol = \"pct_youngkin\",\n                       col.regions = RColorBrewer::brewer.pal(9, \"Reds\"), \n                       alpha.regions = 1,\n                       legend = FALSE,\n                       popup = mypopup4,\n                       label = mylabel4)\n\nWarning: Found less unique colors (9) than unique zcol values (130)! \nInterpolating color vector to match number of zcol values.\n\n\nCustomizing the labels on the map\n\n\n\nNow let’s take a look at the maps. First we’ll find the McAuliffe and Youngkin maps side by side, then the Biden and Trump maps. What we’re seeing in each map is a percentage of the total votes that each candidate received.\n\nsync(youngkin_map, mcauliffe_map)\n\n\n\n\n\n\n\n\n\n\n\n\n\nsync(trump_map, biden_map)\n\n\n\n\n\n\n\n\n\n\n\n\nWe can also see how Biden and McAuliffe, and Trump and Youngkin, compare to each other by district, and if there is a noticeable different\n\nbiden_map | mcauliffe_map\n\n\n\n\n\n\ntrump_map | youngkin_map\n\n\n\n\n\n\n# joined_vacomparison %>% \n#   arrange(desc(biden_pct)) %>% \n#   head(15) %>% \n#   ggplot(aes(x = locality, y = biden_pct)) + \n#   geom_col(color = \"black\", fill = \"#CDBFF5\") +\n#   coord_flip() + \n#   scale_y_continuous(name = \"Pct of Votes to Biden by County\") +\n#   scale_x_discrete(name = \"County\") +\n#   theme_clean() +\n#   labs(title = \"Voter Turnout in US Election\", \n#        subtitle = \"2020 General Election\",\n#        caption = \"Source: USA\") +\n#   theme(axis.text.y = element_text(angle = 45))\n\n\n# \n# joined_vacomparison %>% \n#   arrange(desc(trump_pct)) %>% \n#   head(15) %>% \n#   ggplot(aes(x = locality, y = trump_pct)) + \n#   geom_col(color = \"black\", fill = \"#CDBFF5\") +\n#   coord_flip() + \n#   scale_y_continuous(name = \"Pct of Votes to Trump by County\") +\n#   scale_x_discrete(name = \"County\") +\n#   theme_clean() +\n#   labs(title = \"Voter Turnout in US Election\", \n#        subtitle = \"2020 General Election\",\n#        caption = \"Source: USA\") +\n#   theme(axis.text.y = element_text(angle = 45))\n\n\n# joined_vacomparison %>% \n#   arrange(desc(pct_mcauliffe)) %>% \n#   head(15) %>% \n#   ggplot(aes(x = locality, y = pct_mcauliffe)) + \n#   geom_col(color = \"black\", fill = \"#C2F3BE\") +\n#   coord_flip() + \n#   scale_y_continuous(name = \"Pct of Votes to McAuliffe by County\") +\n#   scale_x_discrete(name = \"County\") +\n#   theme_clean() +\n#   labs(title = \"Voter Turnout in VA Election\", \n#        subtitle = \"2020 VA Governor Election\",\n#        caption = \"Source: USA\") +\n#   theme(axis.text.y = element_text(angle = 45))\n\n\n# joined_vacomparison %>% \n#   arrange(desc(pct_youngkin)) %>% \n#   head(15) %>% \n#   ggplot(aes(x = locality, y = pct_youngkin)) + \n#   geom_col(color = \"black\", fill = \"#C2F3BE\") +\n#   coord_flip() + \n#   scale_y_continuous(name = \"Pct of Votes to Youngkin by County\") +\n#   scale_x_discrete(name = \"County\") +\n#   theme_clean() +\n#   labs(title = \"Voter Turnout in VA Election\", \n#        subtitle = \"2020 VA Governor Election\",\n#        caption = \"Source: USA\") +\n#   theme(axis.text.y = element_text(angle = 45))"
  },
  {
    "objectID": "map.html",
    "href": "map.html",
    "title": "R Visualization Walkthrough",
    "section": "",
    "text": "Here I will be taking you through how I am creating an interactive map displaying the median income in Massachusetts, using census data.\n\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\nlibrary(tigris)\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\nlibrary(sf)\n\nLinking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE\n\nlibrary(tidycensus)\nlibrary(htmltools)\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(here)\n\nhere() starts at /cloud/project\n\nlibrary(mapview)\nlibrary(leafsync)\nlibrary(leaflet.extras2)\n\nLoading required package: leaflet\n\noptions(tigris_class = \"sf\")"
  },
  {
    "objectID": "map.html#step-1",
    "href": "map.html#step-1",
    "title": "R Visualization Walkthrough",
    "section": "Step #1",
    "text": "Step #1\nFirst, I will be coding a few variables of interest. We will be specifically analyzing the median income variable.\n\nmyvars <- c(totalpop = \"B01003_001\",\n            medincome = \"B19013_001\",\n            medage = \"B01002_001\"\n)"
  },
  {
    "objectID": "map.html#step-2",
    "href": "map.html#step-2",
    "title": "R Visualization Walkthrough",
    "section": "Step #2",
    "text": "Step #2\nThen, I will retrieve the data from the American Community Survey feature, using tidycensus in R.\n\nma_counties_withgeo <- get_acs(geography = \"county\",\n                       variables = c(myvars),\n                       state = \"MA\",\n                       output = \"wide\",\n                       geometry = TRUE)\n\nGetting data from the 2017-2021 5-year ACS\n\n\nWarning: • You have not set a Census API key. Users without a key are limited to 500\nqueries per day and may experience performance limitations.\nℹ For best results, get a Census API key at\nhttp://api.census.gov/data/key_signup.html and then supply the key to the\n`census_api_key()` function to use it throughout your tidycensus session.\nThis warning is displayed once per session.\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |===================================                                   |  51%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |=================================================================     |  94%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |======================================================================| 100%\n\nma_counties_withgeo\n\nSimple feature collection with 14 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -73.50814 ymin: 41.23796 xmax: -69.92839 ymax: 42.88659\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                             NAME totalpopE totalpopM medincomeE\n1  25017  Middlesex County, Massachusetts   1623411        NA     111790\n2  25005    Bristol County, Massachusetts    576070        NA      74290\n3  25015  Hampshire County, Massachusetts    161810        NA      76959\n4  25025    Suffolk County, Massachusetts    792647        NA      80260\n5  25023   Plymouth County, Massachusetts    527602        NA      98190\n6  25027  Worcester County, Massachusetts    856858        NA      81660\n7  25009      Essex County, Massachusetts    804598        NA      86684\n8  25001 Barnstable County, Massachusetts    227942        NA      82619\n9  25013    Hampden County, Massachusetts    466265        NA      61310\n10 25021    Norfolk County, Massachusetts    720403        NA     112089\n   medincomeM medageE medageM                       geometry\n1        1032    38.5     0.1 MULTIPOLYGON (((-71.89877 4...\n2        1371    40.9     0.2 MULTIPOLYGON (((-70.83595 4...\n3        2504    36.7     0.2 MULTIPOLYGON (((-73.06577 4...\n4        1586    33.3     0.2 MULTIPOLYGON (((-70.93091 4...\n5        1711    42.6     0.2 MULTIPOLYGON (((-70.88335 4...\n6         987    40.2     0.2 MULTIPOLYGON (((-72.31363 4...\n7        1333    40.8     0.2 MULTIPOLYGON (((-70.58029 4...\n8        2539    53.9     0.2 MULTIPOLYGON (((-70.68698 4...\n9        1065    39.4     0.2 MULTIPOLYGON (((-73.07484 4...\n10       1589    40.7     0.2 MULTIPOLYGON (((-70.84466 4..."
  },
  {
    "objectID": "map.html#step-3",
    "href": "map.html#step-3",
    "title": "R Visualization Walkthrough",
    "section": "Step #3",
    "text": "Step #3\nNow I’ll just clean up the data a bit and get it prepped for the map.\n\nma_counties_withgeo <- ma_counties_withgeo %>%\n  select(-ends_with(\"M\"))\n\n\ncolnames(ma_counties_withgeo) <- sub(\"E$\", \"\", colnames(ma_counties_withgeo))"
  },
  {
    "objectID": "map.html#step-4",
    "href": "map.html#step-4",
    "title": "R Visualization Walkthrough",
    "section": "Step #4",
    "text": "Step #4\nAnd behold! Using mapview, below I can display an interactive map displaying the median income for each county in the state of Massachusetts.\n\nmapview(ma_counties_withgeo, zcol = \"medincome\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1)\n\nWarning: Found less unique colors (9) than unique zcol values (14)! \nInterpolating color vector to match number of zcol values.\n\n\n\n\n\n\n\n\nmypopup <- glue::glue(\"<strong>{ma_counties_withgeo$NAM}</strong><br />\n                      Total Population: {ma_counties_withgeo$totalpop}<br />\n                      Median Income: {ma_counties_withgeo$medincome}\") %>% \n  lapply(htmltools::HTML)"
  },
  {
    "objectID": "map.html#step-5",
    "href": "map.html#step-5",
    "title": "R Visualization Walkthrough",
    "section": "Step #5",
    "text": "Step #5\nHere is a cleaned up version of the map the utilizes a pop-up.\n\nmapview(ma_counties_withgeo, zcol = \"medincome\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1,\n         popup = mypopup)\n\nWarning: Found less unique colors (9) than unique zcol values (14)! \nInterpolating color vector to match number of zcol values."
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html",
    "href": "01_virginia_election_project_datawrangling.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "Data available here: https://historical.elections.virginia.gov/elections/view/144567/\nA little column cleaning and we’ll load in the data file.\n\nprez_2020 <- read_csv(\"processed_data/va_2020_prez_cleaned.csv\")\n\nRows: 134 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): locality\nnum (3): biden, trump, total_votes_2021_prez\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLet’s see what we have\n\nhead(prez_2020) \n\n# A tibble: 6 × 4\n  locality         biden trump total_votes_2021_prez\n  <chr>            <dbl> <dbl>                 <dbl>\n1 Accomack County   7578  9172                 16962\n2 Albemarle County 42466 20804                 64657\n3 Alexandria City  66240 14544                 82508\n4 Alleghany County  2243  5859                  8203\n5 Amelia County     2411  5390                  7893\n6 Amherst County    5672 11041                 17005\n\n\nCalculating percentage of the vote\n\nprez_2020 %>% \n  mutate(\n    biden_pct = biden/total_votes_2021_prez\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962     0.447\n 2 Albemarle County   42466 20804                 64657     0.657\n 3 Alexandria City    66240 14544                 82508     0.803\n 4 Alleghany County    2243  5859                  8203     0.273\n 5 Amelia County       2411  5390                  7893     0.305\n 6 Amherst County      5672 11041                 17005     0.334\n 7 Appomattox County   2418  6702                  9268     0.261\n 8 Arlington County  105344 22318                130699     0.806\n 9 Augusta County     10840 30714                 42278     0.256\n10 Bath County          646  1834                  2501     0.258\n# … with 124 more rows\n\n\nNow let’s do some rounding and move that decimal point\n\nprez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 1)\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962      44.7\n 2 Albemarle County   42466 20804                 64657      65.7\n 3 Alexandria City    66240 14544                 82508      80.3\n 4 Alleghany County    2243  5859                  8203      27.3\n 5 Amelia County       2411  5390                  7893      30.5\n 6 Amherst County      5672 11041                 17005      33.4\n 7 Appomattox County   2418  6702                  9268      26.1\n 8 Arlington County  105344 22318                130699      80.6\n 9 Augusta County     10840 30714                 42278      25.6\n10 Bath County          646  1834                  2501      25.8\n# … with 124 more rows\n\n\nNow trump too\n\nprez_2020 <- prez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 2),\n    trump_pct = janitor::round_half_up(trump / total_votes_2021_prez * 100, 2)\n  )\n\nhead(prez_2020)\n\n# A tibble: 6 × 6\n  locality         biden trump total_votes_2021_prez biden_pct trump_pct\n  <chr>            <dbl> <dbl>                 <dbl>     <dbl>     <dbl>\n1 Accomack County   7578  9172                 16962      44.7      54.1\n2 Albemarle County 42466 20804                 64657      65.7      32.2\n3 Alexandria City  66240 14544                 82508      80.3      17.6\n4 Alleghany County  2243  5859                  8203      27.3      71.4\n5 Amelia County     2411  5390                  7893      30.6      68.3\n6 Amherst County    5672 11041                 17005      33.4      64.9"
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html#reshaping",
    "href": "01_virginia_election_project_datawrangling.html#reshaping",
    "title": "Virginia Election Project",
    "section": "Reshaping",
    "text": "Reshaping\nEnter pivot_wider().\nWe’ll get rid of everything we don’t need first.\n\ngov_2021 <- gov_2021 %>% \n  filter(ballot_name %in% c(\"Glenn A. Youngkin\", \"Terry R. McAuliffe\")) %>% \n  select(-locality_code,\n         -political_party)\n  \ngov_2021\n\n# A tibble: 266 × 4\n   locality_name    ballot_name        votes percentage\n   <chr>            <chr>              <int> <chr>     \n 1 ACCOMACK COUNTY  Glenn A. Youngkin   7878 61.08%    \n 2 ACCOMACK COUNTY  Terry R. McAuliffe  4948 38.37%    \n 3 ALBEMARLE COUNTY Glenn A. Youngkin  19141 37.21%    \n 4 ALBEMARLE COUNTY Terry R. McAuliffe 31919 62.05%    \n 5 ALEXANDRIA CITY  Glenn A. Youngkin  14013 24.02%    \n 6 ALEXANDRIA CITY  Terry R. McAuliffe 43866 75.20%    \n 7 ALLEGHANY COUNTY Glenn A. Youngkin   4530 74.52%    \n 8 ALLEGHANY COUNTY Terry R. McAuliffe  1518 24.97%    \n 9 AMELIA COUNTY    Glenn A. Youngkin   4720 74.19%    \n10 AMELIA COUNTY    Terry R. McAuliffe  1617 25.42%    \n# … with 256 more rows\n\n\nNow we’ll do the spreading out to reshape.\n\ngov_2021_wide <- gov_2021 %>% \n  pivot_wider(names_from = ballot_name, values_from = c(votes, percentage))\n\ngov_2021_wide\n\n# A tibble: 133 × 5\n   locality_name     `votes_Glenn A. Youngkin` votes_Terry R. …¹ perce…² perce…³\n   <chr>                                 <int>             <int> <chr>   <chr>  \n 1 ACCOMACK COUNTY                        7878              4948 61.08%  38.37% \n 2 ALBEMARLE COUNTY                      19141             31919 37.21%  62.05% \n 3 ALEXANDRIA CITY                       14013             43866 24.02%  75.20% \n 4 ALLEGHANY COUNTY                       4530              1518 74.52%  24.97% \n 5 AMELIA COUNTY                          4720              1617 74.19%  25.42% \n 6 AMHERST COUNTY                         9731              3897 71.00%  28.43% \n 7 APPOMATTOX COUNTY                      5971              1438 80.26%  19.33% \n 8 ARLINGTON COUNTY                      21548             73013 22.63%  76.67% \n 9 AUGUSTA COUNTY                        26196              7231 77.93%  21.51% \n10 BATH COUNTY                            1539               396 79.04%  20.34% \n# … with 123 more rows, and abbreviated variable names\n#   ¹​`votes_Terry R. McAuliffe`, ²​`percentage_Glenn A. Youngkin`,\n#   ³​`percentage_Terry R. McAuliffe`\n\n\nNice.\nThis is giving us some pretty long column names. we can change them after the fact using rename(). But first let’s clean the names to make it easier.\n\ngov_2021_wide <- gov_2021_wide %>% \n  clean_names()\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    votes_glenn_a_youngkin votes_terry_r_mc_aul…¹ perce…² perce…³\n  <chr>                             <int>                  <int> <chr>   <chr>  \n1 ACCOMACK COUNTY                    7878                   4948 61.08%  38.37% \n2 ALBEMARLE COUNTY                  19141                  31919 37.21%  62.05% \n3 ALEXANDRIA CITY                   14013                  43866 24.02%  75.20% \n4 ALLEGHANY COUNTY                   4530                   1518 74.52%  24.97% \n5 AMELIA COUNTY                      4720                   1617 74.19%  25.42% \n6 AMHERST COUNTY                     9731                   3897 71.00%  28.43% \n# … with abbreviated variable names ¹​votes_terry_r_mc_auliffe,\n#   ²​percentage_glenn_a_youngkin, ³​percentage_terry_r_mc_auliffe\n\n\nNow let’s rename, and we’ll use similar names to what we had earlier in our 2021 results.\n\ngov_2021_wide <- gov_2021_wide %>% \n  rename(\n    youngkin = votes_glenn_a_youngkin,\n    mcauliffe = votes_terry_r_mc_auliffe,\n    pct_youngkin = percentage_glenn_a_youngkin,\n    pct_mcauliffe = percentage_terry_r_mc_auliffe\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int> <chr>        <chr>        \n1 ACCOMACK COUNTY      7878      4948 61.08%       38.37%       \n2 ALBEMARLE COUNTY    19141     31919 37.21%       62.05%       \n3 ALEXANDRIA CITY     14013     43866 24.02%       75.20%       \n4 ALLEGHANY COUNTY     4530      1518 74.52%       24.97%       \n5 AMELIA COUNTY        4720      1617 74.19%       25.42%       \n6 AMHERST COUNTY       9731      3897 71.00%       28.43%       \n\n\nBingo.\nThere’s still one potential issue here. Can you see it?\nThe percentage columns are actually text values, not numbers. And they have that % sign in the text too. Let’s fix that using a handy function from the readr package, parse_number().\n\ngov_2021_wide <- gov_2021_wide %>% \n  mutate(\n    pct_youngkin = readr::parse_number(pct_youngkin),\n    pct_mcauliffe = readr::parse_number(pct_mcauliffe)\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int>        <dbl>         <dbl>\n1 ACCOMACK COUNTY      7878      4948         61.1          38.4\n2 ALBEMARLE COUNTY    19141     31919         37.2          62.0\n3 ALEXANDRIA CITY     14013     43866         24.0          75.2\n4 ALLEGHANY COUNTY     4530      1518         74.5          25.0\n5 AMELIA COUNTY        4720      1617         74.2          25.4\n6 AMHERST COUNTY       9731      3897         71            28.4\n\n\nPerfect. Problem solved."
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html#comparing-gov-vs.-prez-results",
    "href": "01_virginia_election_project_datawrangling.html#comparing-gov-vs.-prez-results",
    "title": "Virginia Election Project",
    "section": "Comparing gov vs. prez results",
    "text": "Comparing gov vs. prez results\nNow that things are join, let’s actually go ahead and start making columns to compare the two elections and how the candidates did this time compared with last time.\nWhere should we go from here….? Give it a shot…\n\njoined_vacomparison %>% \n  mutate(\n    mc_overperform = pct_mcauliffe - biden_pct,\n    mc_overperform_5 <- if_else(mc_overperform < -5, \"Yes\", \"No\")\n  )\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4   -6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0   -3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2   -5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0   -2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4   -5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4   -4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3   -6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7   -3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5   -4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3   -5.49\n# … with 123 more rows, 1 more variable: `mc_overperform_5 <- ...` <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform\n\n\n\nsaveRDS(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.rds\"))\nwrite_csv(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.csv\"))"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Articles Portfolio",
    "section": "",
    "text": "As a student journalist, I have conducted countless interviews in order to produce original reporting on the issues most affecting our communities—whether within the media itself, or during social phenomenon such as ‘Striketober.’ Below is a sample article about Striketober, which I was able to write by interviewing public servants in the DMV area. I have also linked my portfolios in MediaFile and the GW Hatchet."
  },
  {
    "objectID": "portfolio.html#mediafile-articles",
    "href": "portfolio.html#mediafile-articles",
    "title": "Articles Portfolio",
    "section": "MediaFile Articles",
    "text": "MediaFile Articles\nWhile at MediaFileDC, a student run online paper, I I conducted original reporting by speaking to various academics and experts while covering stories on the international beat. At MediaFile, the goal for reporters is to find stories with some sort of media lens—for example, my stories ranged from the Western media coverage of Afghan women, to the media scrutiny Meghan Markle faced from the UK press."
  },
  {
    "objectID": "portfolio.html#gw-hatchet-articles",
    "href": "portfolio.html#gw-hatchet-articles",
    "title": "Articles Portfolio",
    "section": "GW Hatchet Articles",
    "text": "GW Hatchet Articles\nAt The Hatchet, I covered two stories on campus involving the implentation of GW’s u-pass program, and the student and university responses to an assault, interviewing several students in the process."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "More About Me",
    "section": "",
    "text": "My name is Samiha Farooqi, and I am currently studying data science and history at The George Washington University. In my courses, I’ve utilized data visualization and data analytics to complement my research into social phenomena and issues—for example, I analyzed the social impacts of the ‘Striketober’ events in the Fall of 2021. And in a different final project in one of my data visualization classes, I attempted to answer the following question: in what ways has the average American fared over the course of the COVID-19 pandemic? Using a series of maps, graphs, and statistical figures derived from several data sets—such as the American Community Survey—I analyzed the pandemic’s impact on poverty, and what factors contributed to those changes. It is this sort of work that lies at the intersection of data science and social research that I’m most interested in."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Samiha Farooqi",
    "section": "",
    "text": "Hi, I’m Samiha, and I’m a history and data science double major at the George Washington University in Washington, D.C."
  },
  {
    "objectID": "va_project.html",
    "href": "va_project.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "First we’ll begin by cleaning up and joining two data sets containing info on the 2020 national election results, as well as the VA governor race.\nData available here: https://historical.elections.virginia.gov/elections/view/144567/\n\nprez_2020 <- read_csv(\"processed_data/va_2020_prez_cleaned.csv\")\n\nRows: 134 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): locality\nnum (3): biden, trump, total_votes_2021_prez\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nTaking a first look at the data\n\nhead(prez_2020) \n\n# A tibble: 6 × 4\n  locality         biden trump total_votes_2021_prez\n  <chr>            <dbl> <dbl>                 <dbl>\n1 Accomack County   7578  9172                 16962\n2 Albemarle County 42466 20804                 64657\n3 Alexandria City  66240 14544                 82508\n4 Alleghany County  2243  5859                  8203\n5 Amelia County     2411  5390                  7893\n6 Amherst County    5672 11041                 17005\n\n\nCalculating percentage of the vote\n\nprez_2020 %>% \n  mutate(\n    biden_pct = biden/total_votes_2021_prez\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962     0.447\n 2 Albemarle County   42466 20804                 64657     0.657\n 3 Alexandria City    66240 14544                 82508     0.803\n 4 Alleghany County    2243  5859                  8203     0.273\n 5 Amelia County       2411  5390                  7893     0.305\n 6 Amherst County      5672 11041                 17005     0.334\n 7 Appomattox County   2418  6702                  9268     0.261\n 8 Arlington County  105344 22318                130699     0.806\n 9 Augusta County     10840 30714                 42278     0.256\n10 Bath County          646  1834                  2501     0.258\n# … with 124 more rows\n\n\nNow let’s do some rounding and move that decimal point\n\nprez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 1)\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962      44.7\n 2 Albemarle County   42466 20804                 64657      65.7\n 3 Alexandria City    66240 14544                 82508      80.3\n 4 Alleghany County    2243  5859                  8203      27.3\n 5 Amelia County       2411  5390                  7893      30.5\n 6 Amherst County      5672 11041                 17005      33.4\n 7 Appomattox County   2418  6702                  9268      26.1\n 8 Arlington County  105344 22318                130699      80.6\n 9 Augusta County     10840 30714                 42278      25.6\n10 Bath County          646  1834                  2501      25.8\n# … with 124 more rows\n\n\nCalculating the percentage of the total votes Biden and Trump respectively recieved\n\nprez_2020 <- prez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 2),\n    trump_pct = janitor::round_half_up(trump / total_votes_2021_prez * 100, 2)\n  )\n\nhead(prez_2020)\n\n# A tibble: 6 × 6\n  locality         biden trump total_votes_2021_prez biden_pct trump_pct\n  <chr>            <dbl> <dbl>                 <dbl>     <dbl>     <dbl>\n1 Accomack County   7578  9172                 16962      44.7      54.1\n2 Albemarle County 42466 20804                 64657      65.7      32.2\n3 Alexandria City  66240 14544                 82508      80.3      17.6\n4 Alleghany County  2243  5859                  8203      27.3      71.4\n5 Amelia County     2411  5390                  7893      30.6      68.3\n6 Amherst County    5672 11041                 17005      33.4      64.9\n\n\nData now available from the state here: https://historical.elections.virginia.gov/elections/view/147466.\n\njsonfile <- \"raw_data/va_gov_json_archived.json\"\n\n#using jsonlite package function fromJSON()\nthis.content <- fromJSON(jsonfile)\n\n#dataframe from just the 6 content \ncontent_df <- as.data.frame(this.content[[6]])\n\nWhere are candidates themselves? They are “nested” inside. We’ll use unnest()to expand things.\n\n#unnest\nresults <- content_df %>%\n  unnest(cols = Candidates)\n\nhead(results)\n\n# A tibble: 6 × 9\n  Locali…¹ $Loca…² Preci…³ Preci…⁴ LastM…⁵ Ballo…⁶ Ballo…⁷ Votes Perce…⁸ Polit…⁹\n  <chr>    <chr>     <int>   <int> <chr>   <chr>     <int> <int> <chr>   <chr>  \n1 ACCOMAC… 001          19      19 2021-1… Glenn …  1   e0  7878 61.08%  Republ…\n2 ACCOMAC… 001          19      19 2021-1… Terry …  2   e0  4948 38.37%  Democr…\n3 ACCOMAC… 001          19      19 2021-1… Prince…  3   e0    67 0.52%   Libera…\n4 ACCOMAC… 001          19      19 2021-1… Write …  2.15e9     4 0.03%   Write-…\n5 ALBEMAR… 003          33      33 2021-1… Glenn …  1   e0 19141 37.21%  Republ…\n6 ALBEMAR… 003          33      33 2021-1… Terry …  2   e0 31919 62.05%  Democr…\n# … with abbreviated variable names ¹​Locality$LocalityName, ²​$LocalityCode,\n#   ³​PrecinctsReporting, ⁴​PrecinctsParticipating, ⁵​LastModified, ⁶​BallotName,\n#   ⁷​BallotOrder, ⁸​Percentage, ⁹​PoliticalParty\n\n\nUnnest again on locality\n\nresults <- results %>%\n  unnest(cols = Locality)\n\nhead(results)\n\n# A tibble: 6 × 10\n  Locali…¹ Local…² Preci…³ Preci…⁴ LastM…⁵ Ballo…⁶ Ballo…⁷ Votes Perce…⁸ Polit…⁹\n  <chr>    <chr>     <int>   <int> <chr>   <chr>     <int> <int> <chr>   <chr>  \n1 ACCOMAC… 001          19      19 2021-1… Glenn …  1   e0  7878 61.08%  Republ…\n2 ACCOMAC… 001          19      19 2021-1… Terry …  2   e0  4948 38.37%  Democr…\n3 ACCOMAC… 001          19      19 2021-1… Prince…  3   e0    67 0.52%   Libera…\n4 ACCOMAC… 001          19      19 2021-1… Write …  2.15e9     4 0.03%   Write-…\n5 ALBEMAR… 003          33      33 2021-1… Glenn …  1   e0 19141 37.21%  Republ…\n6 ALBEMAR… 003          33      33 2021-1… Terry …  2   e0 31919 62.05%  Democr…\n# … with abbreviated variable names ¹​LocalityName, ²​LocalityCode,\n#   ³​PrecinctsReporting, ⁴​PrecinctsParticipating, ⁵​LastModified, ⁶​BallotName,\n#   ⁷​BallotOrder, ⁸​Percentage, ⁹​PoliticalParty\n\n\nCleaning up the columns\n\ngov_2021 <- results %>% \n  clean_names() %>% \n  select(-precincts_reporting,\n         -precincts_participating,\n         -last_modified,\n         -ballot_order)\n\nhead(gov_2021)\n\n# A tibble: 6 × 6\n  locality_name    locality_code ballot_name          votes percentage politic…¹\n  <chr>            <chr>         <chr>                <int> <chr>      <chr>    \n1 ACCOMACK COUNTY  001           Glenn A. Youngkin     7878 61.08%     Republic…\n2 ACCOMACK COUNTY  001           Terry R. McAuliffe    4948 38.37%     Democrat…\n3 ACCOMACK COUNTY  001           Princess L. Blanding    67 0.52%      Liberati…\n4 ACCOMACK COUNTY  001           Write In                 4 0.03%      Write-In \n5 ALBEMARLE COUNTY 003           Glenn A. Youngkin    19141 37.21%     Republic…\n6 ALBEMARLE COUNTY 003           Terry R. McAuliffe   31919 62.05%     Democrat…\n# … with abbreviated variable name ¹​political_party\n\n\nReshaping the data so that it’s easier to use\n\ngov_2021 <- gov_2021 %>% \n  filter(ballot_name %in% c(\"Glenn A. Youngkin\", \"Terry R. McAuliffe\")) %>% \n  select(-locality_code,\n         -political_party)\n  \ngov_2021\n\n# A tibble: 266 × 4\n   locality_name    ballot_name        votes percentage\n   <chr>            <chr>              <int> <chr>     \n 1 ACCOMACK COUNTY  Glenn A. Youngkin   7878 61.08%    \n 2 ACCOMACK COUNTY  Terry R. McAuliffe  4948 38.37%    \n 3 ALBEMARLE COUNTY Glenn A. Youngkin  19141 37.21%    \n 4 ALBEMARLE COUNTY Terry R. McAuliffe 31919 62.05%    \n 5 ALEXANDRIA CITY  Glenn A. Youngkin  14013 24.02%    \n 6 ALEXANDRIA CITY  Terry R. McAuliffe 43866 75.20%    \n 7 ALLEGHANY COUNTY Glenn A. Youngkin   4530 74.52%    \n 8 ALLEGHANY COUNTY Terry R. McAuliffe  1518 24.97%    \n 9 AMELIA COUNTY    Glenn A. Youngkin   4720 74.19%    \n10 AMELIA COUNTY    Terry R. McAuliffe  1617 25.42%    \n# … with 256 more rows\n\n\n\ngov_2021_wide <- gov_2021 %>% \n  pivot_wider(names_from = ballot_name, values_from = c(votes, percentage))\n\ngov_2021_wide\n\n# A tibble: 133 × 5\n   locality_name     `votes_Glenn A. Youngkin` votes_Terry R. …¹ perce…² perce…³\n   <chr>                                 <int>             <int> <chr>   <chr>  \n 1 ACCOMACK COUNTY                        7878              4948 61.08%  38.37% \n 2 ALBEMARLE COUNTY                      19141             31919 37.21%  62.05% \n 3 ALEXANDRIA CITY                       14013             43866 24.02%  75.20% \n 4 ALLEGHANY COUNTY                       4530              1518 74.52%  24.97% \n 5 AMELIA COUNTY                          4720              1617 74.19%  25.42% \n 6 AMHERST COUNTY                         9731              3897 71.00%  28.43% \n 7 APPOMATTOX COUNTY                      5971              1438 80.26%  19.33% \n 8 ARLINGTON COUNTY                      21548             73013 22.63%  76.67% \n 9 AUGUSTA COUNTY                        26196              7231 77.93%  21.51% \n10 BATH COUNTY                            1539               396 79.04%  20.34% \n# … with 123 more rows, and abbreviated variable names\n#   ¹​`votes_Terry R. McAuliffe`, ²​`percentage_Glenn A. Youngkin`,\n#   ³​`percentage_Terry R. McAuliffe`\n\n\n\ngov_2021_wide <- gov_2021_wide %>% \n  clean_names()\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    votes_glenn_a_youngkin votes_terry_r_mc_aul…¹ perce…² perce…³\n  <chr>                             <int>                  <int> <chr>   <chr>  \n1 ACCOMACK COUNTY                    7878                   4948 61.08%  38.37% \n2 ALBEMARLE COUNTY                  19141                  31919 37.21%  62.05% \n3 ALEXANDRIA CITY                   14013                  43866 24.02%  75.20% \n4 ALLEGHANY COUNTY                   4530                   1518 74.52%  24.97% \n5 AMELIA COUNTY                      4720                   1617 74.19%  25.42% \n6 AMHERST COUNTY                     9731                   3897 71.00%  28.43% \n# … with abbreviated variable names ¹​votes_terry_r_mc_auliffe,\n#   ²​percentage_glenn_a_youngkin, ³​percentage_terry_r_mc_auliffe\n\n\n\ngov_2021_wide <- gov_2021_wide %>% \n  rename(\n    youngkin = votes_glenn_a_youngkin,\n    mcauliffe = votes_terry_r_mc_auliffe,\n    pct_youngkin = percentage_glenn_a_youngkin,\n    pct_mcauliffe = percentage_terry_r_mc_auliffe\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int> <chr>        <chr>        \n1 ACCOMACK COUNTY      7878      4948 61.08%       38.37%       \n2 ALBEMARLE COUNTY    19141     31919 37.21%       62.05%       \n3 ALEXANDRIA CITY     14013     43866 24.02%       75.20%       \n4 ALLEGHANY COUNTY     4530      1518 74.52%       24.97%       \n5 AMELIA COUNTY        4720      1617 74.19%       25.42%       \n6 AMHERST COUNTY       9731      3897 71.00%       28.43%       \n\n\n\ngov_2021_wide <- gov_2021_wide %>% \n  mutate(\n    pct_youngkin = readr::parse_number(pct_youngkin),\n    pct_mcauliffe = readr::parse_number(pct_mcauliffe)\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int>        <dbl>         <dbl>\n1 ACCOMACK COUNTY      7878      4948         61.1          38.4\n2 ALBEMARLE COUNTY    19141     31919         37.2          62.0\n3 ALEXANDRIA CITY     14013     43866         24.0          75.2\n4 ALLEGHANY COUNTY     4530      1518         74.5          25.0\n5 AMELIA COUNTY        4720      1617         74.2          25.4\n6 AMHERST COUNTY       9731      3897         71            28.4\n\n\nPerfect. Problem solved.\n\n\n\ngov_2021_wide\n\n# A tibble: 133 × 5\n   locality_name     youngkin mcauliffe pct_youngkin pct_mcauliffe\n   <chr>                <int>     <int>        <dbl>         <dbl>\n 1 ACCOMACK COUNTY       7878      4948         61.1          38.4\n 2 ALBEMARLE COUNTY     19141     31919         37.2          62.0\n 3 ALEXANDRIA CITY      14013     43866         24.0          75.2\n 4 ALLEGHANY COUNTY      4530      1518         74.5          25.0\n 5 AMELIA COUNTY         4720      1617         74.2          25.4\n 6 AMHERST COUNTY        9731      3897         71            28.4\n 7 APPOMATTOX COUNTY     5971      1438         80.3          19.3\n 8 ARLINGTON COUNTY     21548     73013         22.6          76.7\n 9 AUGUSTA COUNTY       26196      7231         77.9          21.5\n10 BATH COUNTY           1539       396         79.0          20.3\n# … with 123 more rows\n\n\n\nprez_2020\n\n# A tibble: 134 × 6\n   locality           biden trump total_votes_2021_prez biden_pct trump_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962      44.7      54.1\n 2 Albemarle County   42466 20804                 64657      65.7      32.2\n 3 Alexandria City    66240 14544                 82508      80.3      17.6\n 4 Alleghany County    2243  5859                  8203      27.3      71.4\n 5 Amelia County       2411  5390                  7893      30.6      68.3\n 6 Amherst County      5672 11041                 17005      33.4      64.9\n 7 Appomattox County   2418  6702                  9268      26.1      72.3\n 8 Arlington County  105344 22318                130699      80.6      17.1\n 9 Augusta County     10840 30714                 42278      25.6      72.6\n10 Bath County          646  1834                  2501      25.8      73.3\n# … with 124 more rows\n\n\nCleaning up the data sets to get them ready for the join\n\nprez_2020 <- prez_2020 %>% \n  mutate(\n    locality = str_to_upper(locality)\n  ) %>% \n  select(-total_votes_2021_prez)\n\nprez_2020\n\n# A tibble: 134 × 5\n   locality           biden trump biden_pct trump_pct\n   <chr>              <dbl> <dbl>     <dbl>     <dbl>\n 1 ACCOMACK COUNTY     7578  9172      44.7      54.1\n 2 ALBEMARLE COUNTY   42466 20804      65.7      32.2\n 3 ALEXANDRIA CITY    66240 14544      80.3      17.6\n 4 ALLEGHANY COUNTY    2243  5859      27.3      71.4\n 5 AMELIA COUNTY       2411  5390      30.6      68.3\n 6 AMHERST COUNTY      5672 11041      33.4      64.9\n 7 APPOMATTOX COUNTY   2418  6702      26.1      72.3\n 8 ARLINGTON COUNTY  105344 22318      80.6      17.1\n 9 AUGUSTA COUNTY     10840 30714      25.6      72.6\n10 BATH COUNTY          646  1834      25.8      73.3\n# … with 124 more rows\n\n\n\nanti_join(prez_2020, gov_2021_wide, by = c(\"locality\" = \"locality_name\"))\n\n# A tibble: 2 × 5\n  locality                biden   trump biden_pct trump_pct\n  <chr>                   <dbl>   <dbl>     <dbl>     <dbl>\n1 KING AND QUEEN COUNTY    1590    2450      38.6      59.5\n2 TOTALS                2413568 1962430      54.1      44  \n\n\n\nanti_join(gov_2021_wide, prez_2020, by = c(\"locality_name\" = \"locality\"))\n\n# A tibble: 1 × 5\n  locality_name       youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>                  <int>     <int>        <dbl>         <dbl>\n1 KING & QUEEN COUNTY     2112      1130         64.8          34.6\n\n\n\nprez_2020 <- prez_2020 %>% \n  filter(locality != \"TOTALS\") %>% \n  mutate(\n    locality = str_replace(locality, \"KING AND QUEEN\", \"KING & QUEEN\")\n  )\n\nNow joining\n\njoined_vacomparison <- inner_join(prez_2020, gov_2021_wide, by = c(\"locality\" = \"locality_name\"))\n\nhead(joined_vacomparison)\n\n# A tibble: 6 × 9\n  locality         biden trump biden_pct trump…¹ young…² mcaul…³ pct_y…⁴ pct_m…⁵\n  <chr>            <dbl> <dbl>     <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>\n1 ACCOMACK COUNTY   7578  9172      44.7    54.1    7878    4948    61.1    38.4\n2 ALBEMARLE COUNTY 42466 20804      65.7    32.2   19141   31919    37.2    62.0\n3 ALEXANDRIA CITY  66240 14544      80.3    17.6   14013   43866    24.0    75.2\n4 ALLEGHANY COUNTY  2243  5859      27.3    71.4    4530    1518    74.5    25.0\n5 AMELIA COUNTY     2411  5390      30.6    68.3    4720    1617    74.2    25.4\n6 AMHERST COUNTY    5672 11041      33.4    64.9    9731    3897    71      28.4\n# … with abbreviated variable names ¹​trump_pct, ²​youngkin, ³​mcauliffe,\n#   ⁴​pct_youngkin, ⁵​pct_mcauliffe\n\n#save results to file for next step\nsaveRDS(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.rds\"))\nwrite_csv(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.csv\"))\n\n\n\n\n\njoined_vacomparison %>% \n  mutate(\n    mc_overperform = pct_mcauliffe - biden_pct,\n    mc_overperform_5 <- if_else(mc_overperform < -5, \"Yes\", \"No\")\n  )\n\n# A tibble: 133 × 11\n   locality  biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶ mc_ov…⁷\n   <chr>     <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>   <dbl>\n 1 ACCOMAC…   7578  9172    44.7    54.1    7878    4948    61.1    38.4   -6.31\n 2 ALBEMAR…  42466 20804    65.7    32.2   19141   31919    37.2    62.0   -3.63\n 3 ALEXAND…  66240 14544    80.3    17.6   14013   43866    24.0    75.2   -5.08\n 4 ALLEGHA…   2243  5859    27.3    71.4    4530    1518    74.5    25.0   -2.37\n 5 AMELIA …   2411  5390    30.6    68.3    4720    1617    74.2    25.4   -5.13\n 6 AMHERST…   5672 11041    33.4    64.9    9731    3897    71      28.4   -4.92\n 7 APPOMAT…   2418  6702    26.1    72.3    5971    1438    80.3    19.3   -6.76\n 8 ARLINGT… 105344 22318    80.6    17.1   21548   73013    22.6    76.7   -3.93\n 9 AUGUSTA…  10840 30714    25.6    72.6   26196    7231    77.9    21.5   -4.13\n10 BATH CO…    646  1834    25.8    73.3    1539     396    79.0    20.3   -5.49\n# … with 123 more rows, 1 more variable: `mc_overperform_5 <- ...` <chr>, and\n#   abbreviated variable names ¹​biden_pct, ²​trump_pct, ³​youngkin, ⁴​mcauliffe,\n#   ⁵​pct_youngkin, ⁶​pct_mcauliffe, ⁷​mc_overperform\n\n\n\nsaveRDS(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.rds\"))\nwrite_csv(joined_vacomparison, here(\"processed_data\", \"joined_vacomparison.csv\"))\n\n\nhead(joined_vacomparison)\n\n# A tibble: 6 × 9\n  locality         biden trump biden_pct trump…¹ young…² mcaul…³ pct_y…⁴ pct_m…⁵\n  <chr>            <dbl> <dbl>     <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>\n1 ACCOMACK COUNTY   7578  9172      44.7    54.1    7878    4948    61.1    38.4\n2 ALBEMARLE COUNTY 42466 20804      65.7    32.2   19141   31919    37.2    62.0\n3 ALEXANDRIA CITY  66240 14544      80.3    17.6   14013   43866    24.0    75.2\n4 ALLEGHANY COUNTY  2243  5859      27.3    71.4    4530    1518    74.5    25.0\n5 AMELIA COUNTY     2411  5390      30.6    68.3    4720    1617    74.2    25.4\n6 AMHERST COUNTY    5672 11041      33.4    64.9    9731    3897    71      28.4\n# … with abbreviated variable names ¹​trump_pct, ²​youngkin, ³​mcauliffe,\n#   ⁴​pct_youngkin, ⁵​pct_mcauliffe\n\n\nFirst, need to join the data set with a shapefile in order to produce a map\n\nva_count_geo <- tigris::counties(state = \"VA\", resolution = \"20m\", cb = TRUE)\n\nRetrieving data for the year 2021\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |==============================                                        |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |======================================================================|  99%\n  |                                                                            \n  |======================================================================| 100%\n\nva_count_geo$NAMELSAD <- toupper(va_count_geo$NAMELSAD)\n\nva_elect_sf <- va_count_geo %>% \n  left_join(. , joined_vacomparison, by=c(\"NAMELSAD\"=\"locality\"))\n\nNext, I’ll customize the labels and pop-ups for the maps so they look cleaner\n\nmylabel1 <- glue::glue(\"{va_elect_sf$NAMELSAD} {va_elect_sf$biden_pct}\")\n\nmylabel2 <- glue::glue(\"{va_elect_sf$NAMELSAD} {va_elect_sf$pct_mcauliffe}\")\n\nmylabel3 <- glue::glue(\"{va_elect_sf$NAMELSAD} {va_elect_sf$trump_pct}\")\n\nmylabel4 <- glue::glue(\"{va_elect_sf$NAMELSAD} {va_elect_sf$pct_youngkin}\")\n\n\nmypopup1 <- glue::glue(\"<strong>{va_elect_sf$NAMELSAD}</strong><br />\n                      Biden Pct: {va_elect_sf$biden_pct}<br />\") %>% \n  lapply(htmltools::HTML)\n\nmypopup2 <- glue::glue(\"<strong>{va_elect_sf$NAMELSAD}</strong><br />\n                      McAuliffe Pct: {va_elect_sf$pct_mcauliffe}<br />\") %>% \n  lapply(htmltools::HTML)\n\nmypopup3 <- glue::glue(\"<strong>{va_elect_sf$NAMELSAD}</strong><br />\n                      Trump Pct: {va_elect_sf$trump_pct}<br />\") %>% \n  lapply(htmltools::HTML)\n\nmypopup4 <- glue::glue(\"<strong>{va_elect_sf$NAMELSAD}</strong><br />\n                      Youngkin Pct: {va_elect_sf$pct_youngkin}<br />\") %>% \n  lapply(htmltools::HTML)\n\nNow I’ll create each map and clean them up to get them ready for comparison\n\nbiden_map = mapview(va_elect_sf, zcol = \"biden_pct\",\n                    col.regions = RColorBrewer::brewer.pal(9, \"Blues\"), \n                    alpha.regions = 1,\n                    legend = FALSE,\n                    popup = mypopup1,\n                    label = mylabel1)\n\nWarning: Found less unique colors (9) than unique zcol values (129)! \nInterpolating color vector to match number of zcol values.\n\n\n\nmcauliffe_map = mapview(va_elect_sf, zcol = \"pct_mcauliffe\",\n                        col.regions = RColorBrewer::brewer.pal(9, \"Blues\"), \n                        alpha.regions = 1,\n                        legend = FALSE,\n                        popup = mypopup2,\n                        label = mylabel2)\n\nWarning: Found less unique colors (9) than unique zcol values (132)! \nInterpolating color vector to match number of zcol values.\n\n\n\ntrump_map = mapview(va_elect_sf, zcol = \"trump_pct\",\n                    col.regions = RColorBrewer::brewer.pal(9, \"Reds\"), \n                    alpha.regions = 1,\n                    legend = FALSE,\n                    popup = mypopup3, \n                    label = mylabel3)\n\nWarning: Found less unique colors (9) than unique zcol values (129)! \nInterpolating color vector to match number of zcol values.\n\n\n\nyoungkin_map = mapview(va_elect_sf, zcol = \"pct_youngkin\",\n                       col.regions = RColorBrewer::brewer.pal(9, \"Reds\"), \n                       alpha.regions = 1,\n                       legend = FALSE,\n                       popup = mypopup4,\n                       label = mylabel4)\n\nWarning: Found less unique colors (9) than unique zcol values (130)! \nInterpolating color vector to match number of zcol values.\n\n\nCustomizing the labels on the map\n\n\n\nNow let’s take a look at the maps. First we’ll find the McAuliffe and Youngkin maps side by side, then the Biden and Trump maps. What we’re seeing in each map is a percentage of the total votes that each candidate received.\n\nsync(youngkin_map, mcauliffe_map)\n\n\n\n\n\n\n\n\n\n\n\n\n\nsync(trump_map, biden_map)\n\n\n\n\n\n\n\n\n\n\n\n\nWe can also see how Biden and McAuliffe, and Trump and Youngkin, compare to each other by district, and if there is a noticeable different\n\nbiden_map | mcauliffe_map\n\n\n\n\n\n\ntrump_map | youngkin_map\n\n\n\n\n\n\n# joined_vacomparison %>% \n#   arrange(desc(biden_pct)) %>% \n#   head(15) %>% \n#   ggplot(aes(x = locality, y = biden_pct)) + \n#   geom_col(color = \"black\", fill = \"#CDBFF5\") +\n#   coord_flip() + \n#   scale_y_continuous(name = \"Pct of Votes to Biden by County\") +\n#   scale_x_discrete(name = \"County\") +\n#   theme_clean() +\n#   labs(title = \"Voter Turnout in US Election\", \n#        subtitle = \"2020 General Election\",\n#        caption = \"Source: USA\") +\n#   theme(axis.text.y = element_text(angle = 45))\n\n\n# \n# joined_vacomparison %>% \n#   arrange(desc(trump_pct)) %>% \n#   head(15) %>% \n#   ggplot(aes(x = locality, y = trump_pct)) + \n#   geom_col(color = \"black\", fill = \"#CDBFF5\") +\n#   coord_flip() + \n#   scale_y_continuous(name = \"Pct of Votes to Trump by County\") +\n#   scale_x_discrete(name = \"County\") +\n#   theme_clean() +\n#   labs(title = \"Voter Turnout in US Election\", \n#        subtitle = \"2020 General Election\",\n#        caption = \"Source: USA\") +\n#   theme(axis.text.y = element_text(angle = 45))\n\n\n# joined_vacomparison %>% \n#   arrange(desc(pct_mcauliffe)) %>% \n#   head(15) %>% \n#   ggplot(aes(x = locality, y = pct_mcauliffe)) + \n#   geom_col(color = \"black\", fill = \"#C2F3BE\") +\n#   coord_flip() + \n#   scale_y_continuous(name = \"Pct of Votes to McAuliffe by County\") +\n#   scale_x_discrete(name = \"County\") +\n#   theme_clean() +\n#   labs(title = \"Voter Turnout in VA Election\", \n#        subtitle = \"2020 VA Governor Election\",\n#        caption = \"Source: USA\") +\n#   theme(axis.text.y = element_text(angle = 45))\n\n\n# joined_vacomparison %>% \n#   arrange(desc(pct_youngkin)) %>% \n#   head(15) %>% \n#   ggplot(aes(x = locality, y = pct_youngkin)) + \n#   geom_col(color = \"black\", fill = \"#C2F3BE\") +\n#   coord_flip() + \n#   scale_y_continuous(name = \"Pct of Votes to Youngkin by County\") +\n#   scale_x_discrete(name = \"County\") +\n#   theme_clean() +\n#   labs(title = \"Voter Turnout in VA Election\", \n#        subtitle = \"2020 VA Governor Election\",\n#        caption = \"Source: USA\") +\n#   theme(axis.text.y = element_text(angle = 45))"
  }
]